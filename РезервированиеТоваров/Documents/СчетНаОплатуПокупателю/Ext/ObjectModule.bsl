
&После("ОбработкаПроведения")
Процедура РЗ_ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.РЗ_ПотребностьВТоварах.Записывать = Истина;
	Движения.РЗ_ЗарезервированныеТовары.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	РЗ_СведенияОРезервированииТоваров.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.РЗ_СведенияОРезервированииТоваров КАК РЗ_СведенияОРезервированииТоваров
	|ГДЕ
	|	РЗ_СведенияОРезервированииТоваров.Документ = &Ссылка";
	
	Результат = Запрос.Выполнить();

	Если Не Результат.Пустой() Тогда
		ТаблицаТоваровДокумента = Товары.Выгрузить(, "Номенклатура,Количество");
		ТаблицаТоваровДокумента.Свернуть("Номенклатура", "Количество");
		Для каждого ТекСтрока Из ТаблицаТоваровДокумента Цикл
			Движение = Движения.РЗ_ПотребностьВТоварах.Добавить();
			Движение.Период           = Дата;
			Движение.ВидДвижения      = ВидДвиженияНакопления.Приход;
			Движение.Номенклатура     = ТекСтрока.Номенклатура;
			Движение.Количество       = ТекСтрока.Количество;
			Движение.СчетПокупателю   = Ссылка;
		КонецЦикла;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", КонецДня(Дата));
	Запрос.УстановитьПараметр("ВидыСубконто", ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура"));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СчетаОстатковТоваров", ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ТоварыНаСкладах"));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетНаОплатуПокупателюТовары.Номенклатура КАК Номенклатура,
	|	СчетНаОплатуПокупателюТовары.Ссылка.Ссылка КАК СчетПокупателю,
	|	СУММА(ЕСТЬNULL(ХозрасчетныйОстатки.КоличествоОстатокДт, 0) - ЕСТЬNULL(РЗ_ЗарезервированныеТоварыОстатки.КоличествоОстаток, 0)) КАК ДоступноДляРезервирования,
	|	СУММА(СчетНаОплатуПокупателюТовары.Количество) КАК КоличествоВСчете
	|ИЗ
	|	Документ.СчетНаОплатуПокупателю.Товары КАК СчетНаОплатуПокупателюТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РЗ_ЗарезервированныеТовары.Остатки(&Период, ) КАК РЗ_ЗарезервированныеТоварыОстатки
	|		ПО СчетНаОплатуПокупателюТовары.Номенклатура = РЗ_ЗарезервированныеТоварыОстатки.Номенклатура
	|			И СчетНаОплатуПокупателюТовары.Ссылка <> РЗ_ЗарезервированныеТоварыОстатки.СчетПокупателю
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В ИЕРАРХИИ (&СчетаОстатковТоваров), &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстатки
	|		ПО СчетНаОплатуПокупателюТовары.Номенклатура = ХозрасчетныйОстатки.Субконто1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РЗ_СведенияОРезервированииТоваров КАК РЗ_СведенияОРезервированииТоваров
	|		ПО СчетНаОплатуПокупателюТовары.Номенклатура = РЗ_СведенияОРезервированииТоваров.Номенклатура
	|			И (РЗ_СведенияОРезервированииТоваров.Документ = &Ссылка)
	|ГДЕ
	|	СчетНаОплатуПокупателюТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетНаОплатуПокупателюТовары.Номенклатура,
	|	СчетНаОплатуПокупателюТовары.Ссылка.Ссылка
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЕСТЬNULL(ХозрасчетныйОстатки.КоличествоОстатокДт, 0) - ЕСТЬNULL(РЗ_ЗарезервированныеТоварыОстатки.КоличествоОстаток, 0)) > 0";
	
	ТаблицаТоваров = Запрос.Выполнить().Выгрузить();
	
	Для каждого ТекСтрокаТовара Из ТаблицаТоваров Цикл
		Движение = Движения.РЗ_ЗарезервированныеТовары.Добавить();
		Движение.Период = Дата;
		ЗаполнитьЗначенияСвойств(Движение, ТекСтрокаТовара);
		Движение.Количество = Мин(ТекСтрокаТовара.КоличествоВСчете, ТекСтрокаТовара.ДоступноДляРезервирования);
	КонецЦикла;
	
КонецПроцедуры


&После("ПриЗаписи")
Процедура РЗ_ПриЗаписи(Отказ)
	
	Если Не Проведен Тогда
		Движения.РЗ_ПотребностьВТоварах.Записать(Истина);
	КонецЕсли;
	
КонецПроцедуры

