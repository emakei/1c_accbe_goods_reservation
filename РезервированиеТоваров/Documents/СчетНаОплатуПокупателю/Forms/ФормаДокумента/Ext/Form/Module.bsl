
&НаСервере
Процедура РЗ_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	Если Отказ Тогда
		Возврат
	КонецЕсли;
	
	РЗ_ПроверитьДобавитьРеквизитыРезервирования();
	
КонецПроцедуры

&НаСервере
Процедура РЗ_ПроверитьДобавитьРеквизитыРезервирования()
	
	Перем КнопкаРезервировать, КомандаРезервировать, МассивДобавляемыхРеквизитов, ЭлементТоварыРезервировать, ЕстьРеквизитыРезервирования;
	
	ЕстьРеквизитыРезервирования = Ложь;
	
	МассивРеквизитовФормы = ЭтаФорма.ПолучитьРеквизиты();
	Для каждого ТекРеквизит Из МассивРеквизитовФормы Цикл
		Если ВРег(ТекРеквизит.Имя) = "РЕЗЕРВИРОВАТЬ" Тогда
			ЕстьРеквизитыРезервирования = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЕстьРеквизитыРезервирования Тогда
		
		МассивДобавляемыхРеквизитов = Новый Массив;
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Резервировать", Новый ОписаниеТипов("Булево")));
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Резервировать", Новый ОписаниеТипов("Булево"), "Объект.Товары"));
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Остаток", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14,3)), "Объект.Товары"));
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Резерв", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14,3)), "Объект.Товары"));
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("КОбеспечению", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14,3)), "Объект.Товары"));
		
		ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
		
		ЭлементТоварыРезервировать = Элементы.Добавить("ТоварыРезервировать", Тип("ПолеФормы"), Элементы.Товары);
		ЭлементТоварыРезервировать.Вид = ВидПоляФормы.ПолеФлажка;
		ЭлементТоварыРезервировать.ПутьКДанным = "Объект.Товары.Резервировать";
		ЭлементТоварыРезервировать.Заголовок = "РВ";
		
		Элементы.Переместить(ЭлементТоварыРезервировать, Элементы.Товары, Элементы.ТоварыГруппаСодержание);
		
		ЭлементКОбеспечению = Элементы.Добавить("ТоварыКОбеспечению", Тип("ПолеФормы"), Элементы.Товары);
		ЭлементКОбеспечению.Вид = ВидПоляФормы.ПолеВвода;
		ЭлементКОбеспечению.ПутьКДанным = "Объект.Товары.КОбеспечению";
		ЭлементКОбеспечению.Заголовок = "К обеспечению";
		ЭлементКОбеспечению.ТолькоПросмотр = Истина;

		ЭлементТоварыОстаток = Элементы.Добавить("ТоварыОстаток", Тип("ПолеФормы"), Элементы.Товары);
		ЭлементТоварыОстаток.Вид = ВидПоляФормы.ПолеВвода;
		ЭлементТоварыОстаток.ПутьКДанным = "Объект.Товары.Остаток";
		ЭлементТоварыОстаток.Заголовок = "Остаток";
		ЭлементТоварыОстаток.ТолькоПросмотр = Истина;
		
		ЭлементТоварыРезерв = Элементы.Добавить("ТоварыРезерв", Тип("ПолеФормы"), Элементы.Товары);
		ЭлементТоварыРезерв.Вид = ВидПоляФормы.ПолеВвода;
		ЭлементТоварыРезерв.ПутьКДанным = "Объект.Товары.Резерв";
		ЭлементТоварыРезерв.Заголовок = "Резерв";
		ЭлементТоварыРезерв.ТолькоПросмотр = Истина;
		
		КомандаРезервировать = Команды.Добавить("КомандаРезервировать");
		КомандаРезервировать.Действие = "РЗ_Резервировать";
		
		КнопкаРезервировать = Элементы.Добавить("КнопкаРезервировать", Тип("КнопкаФормы"), Элементы.ТоварыКоманднаяПанель);
		КнопкаРезервировать.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
		КнопкаРезервировать.ИмяКоманды = "КомандаРезервировать";
		КнопкаРезервировать.Заголовок = "Резервировать";
		
		// Условное оформление поля "КОбеспечению"
		ЭлементУО = УсловноеОформление.Элементы.Добавить();

		ЭлементОтбора = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.КОбеспечению");
		ЭлементОтбора.ПравоеЗначение = 0;

		ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТоварыКОбеспечению");
		
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Зеленый);
		
		ЭлементУО = УсловноеОформление.Элементы.Добавить();

		ЭлементОтбора = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.КОбеспечению");
		ЭлементОтбора.ПравоеЗначение = 0;

		ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТоварыКОбеспечению");
		
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.КрасноФиолетовый);
		
КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РЗ_Резервировать(Команда)
	
	ЭтаФорма.Резервировать = Не ЭтаФорма.Резервировать;
	
	РЗ_ПроставитьПометкиРезервированияНаСервере();
	
	РЗ_УправлениеЭлементамиРезервирования(ЭтаФорма);
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура РЗ_ПроставитьПометкиРезервированияНаСервере()

	Для каждого ТекСтрока Из Объект.Товары Цикл
		ТекСтрока.Резервировать = ЭтаФорма.Резервировать;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РЗ_УправлениеЭлементамиРезервирования(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.КнопкаРезервировать.Пометка = Форма.Резервировать;
	Элементы.ТоварыРезервировать.Видимость = Форма.Резервировать;
	
КонецПроцедуры

&НаСервере
Процедура РЗ_ПриЗаписиНаСервереПосле(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Перем НаборЗаписей, ТаблицаРезервирования, СтрокиКРезервированию;
	
	Если ПараметрыЗаписи.Свойство("ОтраженаИнформацияОНеобходимостиРезервированияТоваров") = Неопределено Тогда
		РЗ_ОтразитьИнформациюОНеобходимостиРезервированияТовара(Отказ, ТекущийОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РЗ_ОтразитьИнформациюОНеобходимостиРезервированияТовара(Знач Отказ, Знач ТекущийОбъект)
	
	Перем НаборЗаписей, НоваяСтрока, СтрокиКРезервированию, ТаблицаРезервирования, ТекСтрокаТаблицы;
	
	Если Не Отказ Тогда
		
		СтрокиКРезервированию = Объект.Товары.НайтиСтроки(Новый Структура("Резервировать", Истина));
		
		ТаблицаРезервирования = Новый ТаблицаЗначений;
		ТаблицаРезервирования.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТаблицаРезервирования.Колонки.Добавить("Документ", Новый ОписаниеТипов("ДокументСсылка.СчетНаОплатуПокупателю"));
		
		Для каждого ТекСтрокаТаблицы Из СтрокиКРезервированию Цикл
			НоваяСтрока = ТаблицаРезервирования.Добавить();
			НоваяСтрока.Номенклатура = ТекСтрокаТаблицы.Номенклатура;
			НоваяСтрока.Документ = ТекущийОбъект.Ссылка;
		КонецЦикла;
		
		ТаблицаРезервирования.Свернуть("Номенклатура,Документ");
		
		НаборЗаписей = РегистрыСведений.РЗ_СведенияОРезервированииТоваров.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Документ.ВидСРавнения = ВидСравнения.Равно;
		НаборЗаписей.Отбор.Документ.Значение = ТекущийОбъект.Ссылка;
		НаборЗаписей.Отбор.Документ.Использование = Истина;
		
		НаборЗаписей.Загрузить(ТаблицаРезервирования);
		
		НаборЗаписей.Записать(Истина);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура РЗ_ПриЧтенииНаСервереПосле(ТекущийОбъект)
	
	РЗ_ПроверитьДобавитьРеквизитыРезервирования();
	
	РЗ_ОтразитьИнформациюОбОстаткахТоваров();
	
	РЗ_УстановитьПометкиРезервирования();
	
	РЗ_УправлениеЭлементамиРезервирования(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура РЗ_УстановитьПометкиРезервирования()
	
	Перем Выборка, Запрос, Результат, СтрокиТоваров, ТекСтрокаТовара;
	
	Если Объект.Ссылка.Пустая() Тогда
		Возврат
	КонецЕсли;
	
	// Необходимо получить данные (сведения) о резервировании по документу
	// П.С. добавление реквизитов в документ работает иногда некорректно, возможно из-за
	// того, что есть несколько расширений, изменяющих один документ
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РЗ_СведенияОРезервированииТоваров.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.РЗ_СведенияОРезервированииТоваров КАК РЗ_СведенияОРезервированииТоваров
	|ГДЕ
	|	РЗ_СведенияОРезервированииТоваров.Документ = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		ЭтаФорма.Резервировать = Истина;
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Не ЗначениеЗаполнено(Выборка.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокиТоваров = Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура", Выборка.Номенклатура));
			Для каждого ТекСтрокаТовара Из СтрокиТоваров Цикл
				ТекСтрокаТовара.Резервировать = Истина;
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РЗ_ПослеЗаписиПосле(ПараметрыЗаписи)
	
	РЗ_ОтразитьИнформациюОбОстаткахТоваров();
	
	РЗ_УстановитьПометкиРезервирования();

КонецПроцедуры

&НаСервере
Процедура РЗ_ОтразитьИнформациюОбОстаткахТоваров(Знач Номенклатура = Неопределено)
	
	Перем ЭтоПересчетПоСтроке;
	
	Если Номенклатура = Неопределено Тогда
		Номенклатура = Объект.Товары.Выгрузить(, "Номенклатура");
		ЭтоПересчетПоСтроке = Ложь;
	Иначе
		ЭтоПересчетПоСтроке = Истина;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	Запрос.УстановитьПараметр("СчетТоваров", ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ТоварыНаСкладах"));
	Запрос.УстановитьПараметр("ВидыСубконто", ПредопределенноеЗначение("ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура"));
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("СчетПокупателю", ?(Объект.Ссылка.Пустая(), Неопределено, Объект.Ссылка));
	Запрос.Текст = "ВЫБРАТЬ
	|	ХозрасчетныйОстатки.КоличествоОстатокДт КАК КоличествоОстаток,
	|	ХозрасчетныйОстатки.Субконто1 КАК Номенклатура,
	|	0 КАК КоличествоРезерв
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет = &СчетТоваров, &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	ХозрасчетныйОстатки.Субконто1 В(&Номенклатура)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	РЗ_ЗарезервированныеТоварыОстатки.Номенклатура,
	|	СУММА(РЗ_ЗарезервированныеТоварыОстатки.КоличествоОстаток)
	|ИЗ
	|	РегистрНакопления.РЗ_ЗарезервированныеТовары.Остатки(&Период, ) КАК РЗ_ЗарезервированныеТоварыОстатки
	|ГДЕ
	|	РЗ_ЗарезервированныеТоварыОстатки.Номенклатура В(&Номенклатура)
	|	И РЗ_ЗарезервированныеТоварыОстатки.СчетПокупателю <> &СчетПокупателю
	|
	|СГРУППИРОВАТЬ ПО
	|	РЗ_ЗарезервированныеТоварыОстатки.Номенклатура
	|ИТОГИ
	|	СУММА(КоличествоОстаток),
	|	СУММА(КоличествоРезерв)
	|ПО
	|	Номенклатура";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Номенклатура");
	
	Для каждого ТекСтрока Из Объект.Товары Цикл
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(ТекСтрока.Номенклатура, "Номенклатура") Тогда
			ТекСтрока.Остаток = Выборка.КоличествоОстаток;
			ТекСтрока.Резерв = Выборка.КоличествоРезерв;
			КОбеспечению = ТекСтрока.Количество - Выборка.КоличествоОстаток - Выборка.КоличествоРезерв;
			ТекСтрока.КОбеспечению = ?(КОбеспечению > 0, КОбеспечению, 0);
		ИначеЕсли Не ЭтоПересчетПоСтроке Тогда
			ТекСтрока.Остаток = 0;
			ТекСтрока.Резерв = 0;
			ТекСтрока.КОбеспечению = ТекСтрока.Количество;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РЗ_ТоварыПриИзмененииПосле(Элемент)
	
	ТекДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	РЗ_ОтразитьИнформациюОбОстаткахТоваров(ТекДанные.Номенклатура);
	
КонецПроцедуры

&НаСервере
Процедура РЗ_ПередЗаписьюНаСервереПосле(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ТекущийОбъект.Ссылка.Пустая() Тогда
		ПараметрыЗаписи.Вставить("ОтраженаИнформацияОНеобходимостиРезервированияТоваров");
		РЗ_ОтразитьИнформациюОНеобходимостиРезервированияТовара(Отказ, ТекущийОбъект);
	КонецЕсли;
	
КонецПроцедуры
